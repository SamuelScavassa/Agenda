@page "/cadastro"
@inject NavigationManager Nav
@inject HttpClient Http
@inject IJSRuntime Js
@using Models

<PageTitle>Cadastro</PageTitle>

<div class="item">
    <h1> - CADASTRO - </h1>
    <form class="container">
        <label>Nome</label>
        <br>
        <input @bind="UserName" type="text" class="input">

        <br><br>

        <label>Email</label>
        <input @bind="UserEmail" type="email" class="input">

        <br><br>

        <label>Senha</label>
        <input @bind="UserPassword" type="password" class="input" id="cadastroSenhaUm">

        <label>Repita sua senha</label>
        <input @bind="UserPasswordDois" type="password" class="input" id="cadastroSenhaDois">

        <br><br>

        <button type="button" @onclick="Create" class="btn">Cadastrar</button>
    </form>
</div>



@code {
    private string UserName { get; set; }
    private string UserEmail { get; set; }
    private string UserPassword { get; set; }
    private string UserPasswordDois { get; set; }

    private IJSObjectReference module;

    protected override async void OnInitialized()
    {
        module = await Js.InvokeAsync<IJSObjectReference>("import", "./scripts/cadastro.js");
    }

    private async Task Create()
    {

        bool senha = await module.InvokeAsync<bool>("validarSenha");
        if (senha == true)
        {
            var response = await Http.PostAsJsonAsync("/user/New", new User
                {
                    UserId = 0,
                    UserName = UserName,
                    UserEmail = UserEmail,
                    UserPassword = UserPassword,
                    UserAbout = "Fale um pouco sobre vocÃª, sintase a vontade ^-^ "
                });
            if (response.IsSuccessStatusCode)
            {
                Nav.NavigateTo("/login");
            }
            else
            {
                Nav.NavigateTo("/cadastro");
            }
        }
    }
}